-- Redeem Tests

Test "Mint then Redeem All"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.005e18 fBNB
    -- Check current affairs
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 10e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0.005e18
    Invariant Static (FToken fBNB ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Expect Changes (BNBBalance Geoff) +0.005e18
    RedeemUnderlyingBnb Geoff 0.005e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) Zero
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) Zero

Test "Mint then Redeem Part"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.005e18 fBNB
    -- Check current affairs
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 10e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0.005e18
    Invariant Static (FToken fBNB ExchangeRateStored)
    -- Now redeem after some time
    FastForward 2 Blocks
    Expect Changes (BNBBalance Geoff) +0.001e18
    RedeemUnderlyingBnb Geoff 0.001e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 8e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0.004e18

Test "Mint then Redeem Too Much"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.005e18 fBNB
    AllowFailures
    -- Check and hold static
    Invariant Static (FToken fBNB ExchangeRateStored)
    Invariant Remains (Bep20 fBNB TokenBalance Geoff) 10e8
    Invariant Static (BNBBalance Geoff)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlyingBnb Geoff 0.0055e18 fBNB
    -- TODO: This should really be REDEEM_NEW_ACCOUNT_BALANCE_CALCULATION_FAILED, but based on
    -- the order of subtractions, total supply comes before account supply.
    Assert Failure MATH_ERROR REDEEM_NEW_TOTAL_SUPPLY_CALCULATION_FAILED "3" -- TODO: This error is wrong

Test "Mint then Redeem Zero"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.005e18 fBNB
    -- Check and hold static
    Invariant Static (FToken fBNB ExchangeRateStored)
    Invariant Remains (Bep20 fBNB TokenBalance Geoff) 10e8
    Invariant Static (BNBBalance Geoff)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlyingBnb Geoff 0e18 fBNB

Test "Mint then redeem with interest - no reserves"
    Invariant Success
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:1e9
    Invariant Remains (FToken fBNB Reserves) Zero
    CallMintBnb Geoff 50e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 50e18
    Assert Equal (FToken fBNB ExchangeRate) 1e9
    -- Get some brah to borrow then repay
    BorrowAndRepayBnbWithInterest fBNB 10e18 5e18 interestRate:0.000001 blocks:500000
    -- We've accrued 10% interest for 5 blocks, or 50% of the amount,
    --   thus, we should have accrued 5e18 of interest for the protocol
    --   This is due pro-rata to all holders, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 55e18
    Assert Equal (FToken fBNB ExchangeRate) 1.1e9
    -- Now redeem all with interest
    Expect Changes (BNBBalance Geoff) 55e18
    RedeemUnderlyingBnb Geoff 55e18 fBNB
    Assert Equal (BNBBalance fBNB) 0e18
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 0e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0e18
    Assert Equal (FToken fBNB ExchangeRate) 1e9

Pending "Mint then redeem part with interest - no reserves"
    Invariant Success
    NewComptroller
    ListedFToken ZRX fBNB initialExchangeRate:1e9
    Invariant Remains (FToken fBNB Reserves) Zero
    Prep Geoff 50e18 ZRX fBNB
    Mint Geoff 50e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 50e18
    Assert Equal (FToken fBNB ExchangeRate) 1e9
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest ZRX fBNB 10e18 5e18 interestRate:0.000001 blocks:500000
    -- We've accrued 10% interest for 5 blocks, or 50% of the amount,
    --   thus, we should have accrued 5e18 of interest for the protocol
    --   This is due pro-rata to all holders, but we just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 55e18
    Assert Equal (FToken fBNB ExchangeRate) 1.1e9
    -- Now redeem all with interest
    Redeem Geoff 499e8 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 1e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0.11e18
    Assert Equal (FToken fBNB ExchangeRate) 1.1e9

Pending "Mint then redeem with reserves and interest"
    Invariant Success
    NewComptroller
    ListedFToken ZRX fBNB initialExchangeRate:1e9
    Prep Geoff 50e18 ZRX fBNB
    Mint Geoff 50e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 50e18
    Assert Equal (FToken fBNB ExchangeRate) 1e9
    -- Get some brah to borrow then repay
    BorrowAndRepayWithInterest ZRX fBNB 10e18 5e18 interestRate:0.000001 blocks:500000 reserveRate:0.2
    -- We've accrued 10% interest for 5 blocks, or 50% of the amount,
    --   thus, we should have accrued 5e18 of interest for the protocol
    --   The reserves should get 20% of this, or 1e18, and the rest
    --   is due pro-rata to all holders. We just have one, so
    --   let's check that account is given correct new balance.
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 500e8
    Assert Equal (FToken fBNB Reserves) 1e18
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 54e18
    -- 55e18 + 0e18 - 1e18 / 500
    Assert Equal (FToken fBNB ExchangeRate) 1.08e9
    -- Now redeem all with interest
    Redeem Geoff 500e8 fBNB
    Assert Equal (Bep20 ZRX TokenBalance Geoff) 54e18
    Assert Equal (Bep20 ZRX TokenBalance fBNB) 1e18
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 0e8
    Assert Equal (FToken fBNB Reserves) 1e18
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0e18
    Assert Equal (FToken fBNB ExchangeRate) 1e9

Test "Two users Mint, one redeems"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.002e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 4e8
    Assert Equal (Bep20 fBNB TotalSupply) 4e8
    CallMintBnb Torrey 0.004e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 4e8
    Assert Equal (Bep20 fBNB TokenBalance Torrey) 8e8
    Assert Equal (Bep20 fBNB TotalSupply) 12e8
    RedeemUnderlyingBnb Torrey 0.0015e18 fBNB
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 4e8
    Assert Equal (Bep20 fBNB TokenBalance Torrey) 5e8
    Assert Equal (Bep20 fBNB TotalSupply) 9e8

Test "Mint then redeem 1 wei"
    NewComptroller
    ListedBNBToken fBNB initialExchangeRate:0.005e9
    CallMintBnb Geoff 0.005e18 fBNB
    AllowFailures
    -- Check current affairs
    Assert Equal (Bep20 fBNB TokenBalance Geoff) 10e8
    Assert Equal (FToken fBNB UnderlyingBalance Geoff) 0.005e18
    Invariant Static (FToken fBNB ExchangeRateStored)
    Invariant Static (BNBBalance Geoff)
    -- Now redeem after some time
    FastForward 2 Blocks
    RedeemUnderlyingBnb Geoff 1 fBNB
    Assert Revert "revert redeemTokens zero"
